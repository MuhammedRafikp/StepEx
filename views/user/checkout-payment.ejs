<%- include("../layouts/header.ejs") %>


    <style>
        .hero-wrap {
            margin-top: 110px;
            display: flex;
            align-items: center;

        }

        .shop-heading {
            text-align: left;
        }

        .breadcrumbs {
            text-align: right;
        }


        .card {
            position: relative;
            display: flex;
            flex-direction: column;
            min-width: 0;
            word-wrap: break-word;
            background-color: #f8f9fa8f;
            background-clip: border-box;
            border: 1 solid;
            border-radius: .25rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 6px 0 rgba(218, 218, 253, 50%), 0 2px 6px 0 rgb(206 206 238 / 50%);
        }

        .me-2 {
            margin-right: .5rem !important;
        }

        .payment-option {
            cursor: pointer;
            color: #000;
            padding: 10px;
            margin: 0px 5px;
            border: 1px solid #cccccc4d;
            border-radius: 5px;
            font-weight: bold;
        }

        .payment-option.selected {
            background-color: #000000;
            color: #ffffff;

        }
    </style>

    <div style="background-color: #f0f0f0; height: 60px;" class="hero-wrap">
        <div class="container">
            <div class="row no-gutters slider-text align-items-start">

                <div class="col-md-6 ftco-animate shop-heading">
                    <h6 style="font-weight: bold; color: #000;">CHECKOUT</h6>
                </div>

                <div class="col-md-6 ftco-animate breadcrumbs">
                    <div class="breadcrumbs">
                        <span class="mr-2">
                            <a href="/"><span class="icon-home"></span>Home ></a>
                            <a href="/cart">cart ></a>
                            <a href="/checkout-payment">checkout</a>
                        </span>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <section class="ftco-section ">
        <div class="container  d-grid justify-content-between" style="margin-top:-50px;">
            <div class="container">
                <div class="main-body">
                    <div class="row">
                        <div class="col-lg-8 ftco-animate">
                            <div class="card">
                                <div class="card-body  ">
                                    <div class="  mb-3">
                                        <h6 class="mb-0" style="font-weight: bold; color: #000;">Payment method</h6>
                                    </div>
                                    <hr>

                                    <div class="row">
                                        <div class="col-lg-12 ">
                                            <div class="card">
                                                <div class="card-body d-flex">
                                                    <div id="cashOnDeliveryOption" class="payment-option selected"><span
                                                            class="icon-money  mx-2"></span>Cash On Delivery</div>
                                                    <div id="razorPayOption" class="payment-option"><span
                                                            class="icon-payment  mx-2"></span>Razor Pay</div>
                                                    <div id="walletOption" class="payment-option"><span
                                                            class="icon-account_balance_wallet  mx-2"></span>Wallet
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-12 ">
                                            <div class="card-body">
                                                <%if(totalAmount && totalAmount>1000){%>
                                                    <div id="no-cod" class="text-center text-danger"
                                                        style="font-size: 13px; display: block;">
                                                        Sorry, There is no Cash On Delivery option for orders above
                                                        ₹1000!
                                                    </div>
                                                    <%}%>
                                                        <div id="razorPayNote" class="text-left mb-3"
                                                            style="display: none;">
                                                            Note: After clicking on the button, you will be directed
                                                            to a secure
                                                            gateway for payment. After completing the payment
                                                            process, you will
                                                            be redirected back to the website to view details of
                                                            your order.
                                                        </div>
                                                        <%if (wallet){%>
                                                            <div id="wallet-balance" class="text-center mb-2"
                                                                style="display: none;">
                                                                Your Wallet Balance: ₹<%=wallet.balance%>
                                                            </div>

                                                            <% if(totalAmount>wallet.balance){%>
                                                                <div id="no-balance" class="text-center text-danger"
                                                                    style="font-size: 13px; display: none;">
                                                                    Insufficient balance
                                                                </div>
                                                                <%} %>

                                                                    <%}else{%>
                                                                        <div id="wallet-balance"
                                                                            class="text-center mb-2"
                                                                            style="display: none;">
                                                                            Your Wallet Balance: ₹0
                                                                        </div>
                                                                        <div id="no-balance"
                                                                            class="text-center text-danger"
                                                                            style="font-size: 13px; display: none;">
                                                                            Insufficient balance
                                                                        </div>
                                                                        <%}%>



                                                                            <div
                                                                                class="d-flex justify-content-center mt-3">
                                                                                <button id="confirmPayment"
                                                                                    class="btn btn-info py-2 px-3 select-address rounded">
                                                                                    <span class="font-weight-bold"
                                                                                        style="font-size: 14px;">Confirm
                                                                                        payment</span>
                                                                                </button>
                                                                            </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col col-lg-4 cart-wrap ftco-animate">
                            <div class="card">
                                <div class="card-body">
                                    <div class="cart-total mb-3">
                                        <h3>Delivery address</h3>
                                        <p class="mb-0 ">
                                            <%= address.name %>
                                        </p>
                                        <p class="mb-0">
                                            <%= address.street_address %>
                                        </p>
                                        <p class="mb-0">
                                            <%= address.place %>
                                        </p>
                                        <p class="mb-0">
                                            <%= address.city %>,<%= address.state %>
                                        </p>
                                        <p class="mb-0">Mobile:<%= address.mobile %>
                                        </p>
                                        <p class="mb-2">
                                            <%= address.pincode %>
                                        </p>

                                        <a href="/checkout-details" class="text-info ">Change address</a>
                                    </div>
                                    <% if(req.session.discount){%>
                                        <div class="cart-total mb-3">
                                            <h3>Order Summary</h3>
                                            <p class="d-flex">
                                                <span>Subtotal</span>
                                                <span class="subtotal">
                                                    ₹<%=totalAmount%>.00
                                                </span>
                                            </p>
                                            <p class="d-flex justify-content-between ">
                                                <span>Discount (<%=req.session.discount%>%)</span>
                                                <span>- ₹ <%=totalAmount*(req.session.discount /100) %></span>
                                            </p>
                                            <p class="d-flex">
                                                <span>Delivery</span>
                                                <span>₹ 0.00</span>
                                            </p>
                                            <hr>
                                            <p class="d-flex total-price">
                                                <span>Total</span>
                                                <span class="total-amount">
                                                    ₹<%=totalAmount-(totalAmount*(req.session.discount /100)) %>
                                                </span>
                                            </p>
                                        </div>
                                        <%}else{%>
                                            <div class="cart-total mb-3">
                                                <h3>Order Summary</h3>
                                                <p class="d-flex">
                                                    <span>Subtotal</span>
                                                    <span class="subtotal">
                                                        ₹<%=totalAmount%>
                                                    </span>
                                                </p>
                                                <p class="d-flex justify-content-between">
                                                    <span>Discount(0%)</span>
                                                    <span>₹0</span>
                                                </p>
                                                <p class="d-flex">
                                                    <span>Delivery</span>
                                                    <span>₹0</span>
                                                </p>
                                                <hr>
                                                <p class="d-flex total-price">
                                                    <span>Total</span>
                                                    <span class="total-amount">₹<%=totalAmount%></span>
                                                </p>
                                            </div>
                                            <%}%>
                                </div>
                            </div>
                        </div>
                    </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>

        document.addEventListener('DOMContentLoaded', function () {
            const cashOnDeliveryOption = document.getElementById('cashOnDeliveryOption');
            const walletOption = document.getElementById('walletOption');
            const razorPayOption = document.getElementById('razorPayOption');

            const noCODMessage = document.getElementById('no-cod');
            const razorPayNote = document.getElementById('razorPayNote');
            const walletBalance = document.getElementById('wallet-balance');
            const noBalance = document.getElementById('no-balance');
            const totalAmount = "<%=totalAmount%> "

            cashOnDeliveryOption.addEventListener('click', function () {

                console.log("<%=totalAmount%>", "hello")
                toggleSelection(cashOnDeliveryOption);
                removeSelection(walletOption);
                removeSelection(razorPayOption);
                showRazorPayNote(false);
                showWalletBalance(false);
                if(noCODMessage){
                noCODMessage.style.display = 'block';
                }
                showNoBalance(false);
                
            });

            razorPayOption.addEventListener('click', function () {

                
                toggleSelection(razorPayOption);
                removeSelection(walletOption);
                removeSelection(cashOnDeliveryOption);
                showRazorPayNote(true);
                showWalletBalance(false);
                if(noCODMessage){
                    noCODMessage.style.display = 'none';
                }
                showNoBalance(false);
                
            });

            walletOption.addEventListener('click', function () {

                toggleSelection(walletOption);
                removeSelection(cashOnDeliveryOption);
                removeSelection(razorPayOption);
                showRazorPayNote(false);
                showWalletBalance(true);
                if(noCODMessage){
                    noCODMessage.style.display = 'none';
                }
               
                showNoBalance(true);
                
            });

            function toggleSelection(element) {
                element.classList.toggle('selected');
            }

            function removeSelection(element) {
                element.classList.remove('selected');
            }

            function showRazorPayNote(show) {
                razorPayNote.style.display = show ? 'block' : 'none';
            }

            function showWalletBalance(show) {
                walletBalance.style.display = show ? 'block' : 'none';
            }

            function showNoBalance(show) {
                noBalance.style.display = show ? 'block' : 'none';
            }


        });

        //COD
        document.addEventListener('DOMContentLoaded', function () {
            const confirmPaymentBtn = document.getElementById('confirmPayment');
            const cashOnDeliveryOption = document.getElementById('cashOnDeliveryOption');
            const totalAmount = "<%=totalAmount%>";
            confirmPaymentBtn.addEventListener('click', function () {
                console.log(totalAmount);
                console.log("COD");
                if (cashOnDeliveryOption.classList.contains('selected')) {
                    if (totalAmount > 1000) {

                        const Toast = Swal.mixin({
                            toast: true,
                            position: "top",
                            showConfirmButton: false,
                            timer: 2000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer);
                                toast.addEventListener('mouseleave', Swal.resumeTimer);
                            }
                        });

                        Toast.fire({
                            icon: "warning",
                            title: 'No Cash On Delivery option for orders above ₹1000',
                            width: "550"
                        });
                        return; 
                    }

                    Swal.fire({
                        title: 'Confirm Payment?',
                        width: "450",
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, proceed!',
                        reverseButtons: true,

                    }).then((result) => {

                        if (result.isConfirmed) {
                            console.log("confirm")
                            const paymentMethod = 'COD';
                            const paymentStatus = "Pending"
                            const data = { paymentMethod: paymentMethod, paymentStatus: paymentStatus };
                            fetch('/confirm-order', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            })
                                .then(response => response.json())
                                .then(data => {

                                    if (data.success) {
                                        window.location.href = '/order-placed?status=success';

                                    } else {

                                        Swal.fire({
                                            icon: 'warning',
                                            text: data.message

                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                });
                        }
                    });
                }
            });
        });


        //Razorpay
        document.addEventListener('DOMContentLoaded', function () {
            const razorPayBtn = document.getElementById('confirmPayment');
            const razorPayOption = document.getElementById('razorPayOption');
            razorPayBtn.addEventListener('click', function () {

                if (razorPayOption.classList.contains('selected')) {

                    fetch('/razorpay', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(response => {

                            if (response.ok) {
                                return response.json();
                            } else {
                                throw new Error('Failed to initiate payment1');
                            }
                        })
                        .then(data => {

                            var options = {
                                key: '<%=razorpaykey%>',
                                amount: data.order.amount,
                                currency: data.order.currency,
                                name: 'StepEx',
                                description: 'Payment for Your Order',
                                image: '/logo/stepexlogo.png',
                                handler: function (response) {

                                    console.log('Payment successful! Payment ID:', response);
                                    const paymentMethod = 'Razorpay';
                                    const paymentStatus = "Success";
                                    const data = { paymentMethod: paymentMethod, paymentStatus: paymentStatus };

                                    fetch('/confirm-order', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify(data)
                                    })
                                        .then(response => response.json())
                                        .then(data => {
                                            if (data.success) {
                                                window.location.href = '/order-placed?status=success';
                                            } else {
                                                Swal.fire({
                                                    icon: 'warning',
                                                    text: data.message

                                                });
                                            }
                                        })
                                        .catch(error => {
                                            console.error('Error:', error);
                                            alert('Failed to confirm payment');
                                        });
                                },
                                prefill: {
                                    name: 'John Doe', // Pre-fill customer's name
                                    email: 'john@example.com', // Pre-fill customer's email
                                    contact: '9876543210' // Pre-fill customer's phone number
                                },
                                notes: {
                                    // Add any additional notes or metadata
                                    'order_id': 'ORDERID12345'
                                },
                                theme: {
                                    color: '#F37254' // Customize the color theme
                                }
                            };
                            var rzp = new Razorpay(options);
                            rzp.open();
                            rzp.on('payment.failed', () => {
                                setTimeout(() => {
                                    rzp.close(); // Close the payment interface after 4 seconds
                                    const paymentMethod = 'Razorpay';
                                    const paymentStatus = "Pending";
                                    const data = { paymentMethod: paymentMethod, paymentStatus: paymentStatus };
                                    fetch('/confirm-order', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify(data)
                                    })
                                        .then(response => response.json())
                                        .then(data => {
                                            if (data.success) {
                                                window.location.href = '/order-placed?status=failed';
                                            } else {
                                                Swal.fire({
                                                    icon: 'warning',
                                                    text: data.message
                                                });
                                            }
                                        })
                                        .catch(error => {
                                            console.error('Error:', error);
                                            alert('Failed to confirm payment');
                                        });
                                }, 4000);
                            });
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert(error.message);
                        });
                } else {
                    // console.error('Another payment method selected');
                }
            });
        });


        //wallet
        document.addEventListener('DOMContentLoaded', function () {
            const confirmPaymentBtn = document.getElementById('confirmPayment');
            const cashOnDeliveryOption = document.getElementById('walletOption');

            confirmPaymentBtn.addEventListener('click', function () {
                console.log("wallet")
                const noBalance = document.getElementById('no-balance');
                if (cashOnDeliveryOption.classList.contains('selected')) {

                    if (noBalance?.style?.display === 'block') {

                        console.log("helloooooooooooo")

                        const Toast = Swal.mixin({
                            toast: true,
                            position: "top",
                            showConfirmButton: false,
                            timer: 2000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer);
                                toast.addEventListener('mouseleave', Swal.resumeTimer);
                            }
                        });

                        Toast.fire({
                            icon: "warning",
                            title: 'Insufficient Balance',
                            text: 'Please add funds to your wallet before proceeding.',
                            width: "550"
                        });

                    } else {

                        Swal.fire({
                            title: 'Confirm Payment?',
                            width: "450",
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, proceed!',
                            reverseButtons: true,

                        }).then((result) => {

                            if (result.isConfirmed) {
                                console.log("confirm")
                                const paymentMethod = 'Wallet';
                                const paymentStatus = "Success";
                                const data = { paymentMethod: paymentMethod, paymentStatus: paymentStatus };
                                fetch('/confirm-order', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify(data)
                                })
                                    .then(response => response.json())
                                    .then(data => {

                                        if (data.success) {
                                            window.location.href = '/order-placed?status=success';

                                        } else {

                                            Swal.fire({
                                                icon: 'warning',
                                                text: data.message

                                            });
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                    });
                            }
                        });
                    }
                }
            });
        });

    </script>

    <%- include("../layouts/footer.ejs") %>